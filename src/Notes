package model;

import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Entity(name="Hospital")
public class Hospital {
    private long id;
    private String name;
    private Address address;
    private String phoneNumber;

    private List<Department> departments;

    public Hospital() { }
    public Hospital(String name, Address address, String phoneNumber) {
        this.setName(name);
        this.setAddress(address);
        this.setPhoneNumber(phoneNumber);

        departments = new ArrayList<>();
    }

    @Id
    @GeneratedValue(generator="increment")
    @GenericGenerator(name="increment", strategy = "increment")
    public long getId() { return id; }
    private void setId(long id) {
        this.id = id;
    }

    @Basic
    public String getName() { return name; }
    public void setName(String name) {
        if(name == null){throw new NullPointerException("Name field cannot be empty.");}
        this.name = name;
    }

    @Basic
    public Address getAddress() { return address; }
    public void setAddress(Address address) {
        if(address == null){throw new NullPointerException("Address field cannot be empty.");}
        this.address = address;
    }

    @Basic
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) {
        if(phoneNumber== null){throw new NullPointerException("Phone number field cannot be empty.");}
        this.phoneNumber = phoneNumber;
    }

    @Basic
    public List<Department> getDepartments() {
        return departments;
    }
    public void addDepartment(Department department) {
        if(!departments.contains(department)){
            departments.add(department);
        }
    }

    @Override
    public String toString() {
        return "Hospital{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", address=" + address +
                ", phoneNumber='" + phoneNumber + '\'' +
                ", departments=" + departments +
                '}';
    }
}


    @OneToMany(mappedBy = "hospital",cascade = CascadeType.ALL, orphanRemoval = true)
    public List<MedicalWorker> getMedicalWorkers() { return medicalWorkers; }
    public void setMedicalWorkers(List<MedicalWorker> medicalWorkers) { this.medicalWorkers = medicalWorkers; }

    @ManyToMany(mappedBy = "hospitals",cascade = CascadeType.ALL)
    public List<Patient> getPatients() { return patients; }
    public void setPatients(List<Patient> patients) { this.patients = patients; }


    private long id;


    @Id
    @GeneratedValue(generator="increment")
    @GenericGenerator(name="increment", strategy = "increment")
    public long getId() { return id; }
    private void setId(long id) {
        this.id = id;
    }












    doctorPanel = new JPanel(new GridLayout(2,2));
    patientPanel = new JPanel(new GridLayout(2,2));
    dateCityPanel = new JPanel(new GridLayout(2,2));

    doctorPanel.add(doctorName);doctorPanel.add(doctorNameFiled);
    doctorPanel.add(doctorSurname);doctorPanel.add(doctorSurnameFiled);

    patientPanel.add(patientName);patientPanel.add(patientNameFiled);
    patientPanel.add(patientSurname);patientPanel.add(patientSurnameFiled);

    dateCityPanel.add(date);dateCityPanel.add(dateFiled);
    dateCityPanel.add(city);dateCityPanel.add(cityFiled);

    dataPanel = new JPanel(new GridLayout(1,3,5,15));
    dataPanel.add(patientPanel);dataPanel.add(doctorPanel);dataPanel.add(dateCityPanel);

    description = new JTextArea(document.getDescription());
    description.setEditable(false);
    JScrollPane scroller = new JScrollPane(description);